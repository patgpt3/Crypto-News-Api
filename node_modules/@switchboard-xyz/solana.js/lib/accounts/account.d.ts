/// <reference types="node" resolution-mode="require"/>
import { AggregatorAccountData, BufferRelayerAccountData, CrankAccountData, JobAccountData, LeaseAccountData, OracleAccountData, OracleQueueAccountData, PermissionAccountData, SbState, SlidingResultAccountData, VrfAccountData } from "../generated/oracle-program/index.js";
import type { SwitchboardProgram } from "../SwitchboardProgram.js";
import type { AggregatorAccount } from "./aggregatorAccount.js";
import type { AggregatorHistoryBuffer } from "./aggregatorHistoryBuffer.js";
import type { BufferRelayerAccount } from "./bufferRelayAccount.js";
import type { CrankAccount } from "./crankAccount.js";
import type { CrankDataBuffer } from "./crankDataBuffer.js";
import type { JobAccount } from "./jobAccount.js";
import type { LeaseAccount } from "./leaseAccount.js";
import type { OracleAccount } from "./oracleAccount.js";
import type { PermissionAccount } from "./permissionAccount.js";
import type { ProgramStateAccount } from "./programStateAccount.js";
import type { QueueAccount } from "./queueAccount.js";
import type { QueueDataBuffer } from "./queueDataBuffer.js";
import type { VrfAccount } from "./vrfAccount.js";
import * as anchor from "@coral-xyz/anchor";
export declare abstract class Account<T> {
    readonly program: SwitchboardProgram;
    readonly publicKey: anchor.web3.PublicKey;
    /**
     * Account constructor
     * @param program SwitchboardProgram
     * @param publicKey PublicKey of the on-chain resource
     */
    constructor(program: SwitchboardProgram, publicKey: anchor.web3.PublicKey | string);
    /**
     * Retrieve and decode the data in this account.
     */
    abstract loadData(): Promise<T>;
}
/** Callback to pass deserialized account data when updated on-chain */
export type OnAccountChangeCallback<T> = (accountData: T) => void;
export declare const BUFFER_DISCRIMINATOR: Buffer;
export type SwitchboardAccountType = "Aggregator" | "AggregatorHistory" | "BufferRelayer" | "Crank" | "CrankBuffer" | "Job" | "Lease" | "Oracle" | "Permission" | "ProgramState" | "Queue" | "QueueBuffer" | "SlidingWindow" | "Vrf" | "Buffer";
export type SwitchboardAccount = AggregatorAccount | AggregatorHistoryBuffer | BufferRelayerAccount | CrankAccount | CrankDataBuffer | JobAccount | LeaseAccount | OracleAccount | PermissionAccount | ProgramStateAccount | QueueAccount | QueueDataBuffer | VrfAccount;
export type SwitchboardAccountData = AggregatorAccountData | BufferRelayerAccountData | CrankAccountData | JobAccountData | LeaseAccountData | OracleAccountData | PermissionAccountData | SbState | OracleQueueAccountData | SlidingResultAccountData | VrfAccountData;
export declare const DISCRIMINATOR_MAP: Map<string, SwitchboardAccountType>;
//# sourceMappingURL=account.d.ts.map