import type * as types from "../types/index.js";
import * as borsh from "@coral-xyz/borsh";
export interface NoneJSON {
    kind: "None";
}
export declare class None {
    static readonly discriminator = 0;
    static readonly kind = "None";
    readonly discriminator = 0;
    readonly kind = "None";
    toJSON(): NoneJSON;
    toEncodable(): {
        None: {};
    };
}
export interface ActiveJSON {
    kind: "Active";
}
export declare class Active {
    static readonly discriminator = 1;
    static readonly kind = "Active";
    readonly discriminator = 1;
    readonly kind = "Active";
    toJSON(): ActiveJSON;
    toEncodable(): {
        Active: {};
    };
}
export interface NonExecutableJSON {
    kind: "NonExecutable";
}
export declare class NonExecutable {
    static readonly discriminator = 2;
    static readonly kind = "NonExecutable";
    readonly discriminator = 2;
    readonly kind = "NonExecutable";
    toJSON(): NonExecutableJSON;
    toEncodable(): {
        NonExecutable: {};
    };
}
export interface ErrorKindJSON {
    kind: "Error";
}
export declare class ErrorKind {
    static readonly discriminator = 3;
    static readonly kind = "Error";
    readonly discriminator = 3;
    readonly kind = "Error";
    toJSON(): ErrorKindJSON;
    toEncodable(): {
        Error: {};
    };
}
export interface ExpiredJSON {
    kind: "Expired";
}
export declare class Expired {
    static readonly discriminator = 4;
    static readonly kind = "Expired";
    readonly discriminator = 4;
    readonly kind = "Expired";
    toJSON(): ExpiredJSON;
    toEncodable(): {
        Expired: {};
    };
}
export interface None5JSON {
    kind: "None5";
}
export declare class None5 {
    static readonly discriminator = 5;
    static readonly kind = "None5";
    readonly discriminator = 5;
    readonly kind = "None5";
    toJSON(): None5JSON;
    toEncodable(): {
        None5: {};
    };
}
export interface None6JSON {
    kind: "None6";
}
export declare class None6 {
    static readonly discriminator = 6;
    static readonly kind = "None6";
    readonly discriminator = 6;
    readonly kind = "None6";
    toJSON(): None6JSON;
    toEncodable(): {
        None6: {};
    };
}
export interface None7JSON {
    kind: "None7";
}
export declare class None7 {
    static readonly discriminator = 7;
    static readonly kind = "None7";
    readonly discriminator = 7;
    readonly kind = "None7";
    toJSON(): None7JSON;
    toEncodable(): {
        None7: {};
    };
}
export interface OutOfFundsJSON {
    kind: "OutOfFunds";
}
export declare class OutOfFunds {
    static readonly discriminator = 8;
    static readonly kind = "OutOfFunds";
    readonly discriminator = 8;
    readonly kind = "OutOfFunds";
    toJSON(): OutOfFundsJSON;
    toEncodable(): {
        OutOfFunds: {};
    };
}
export interface None9JSON {
    kind: "None9";
}
export declare class None9 {
    static readonly discriminator = 9;
    static readonly kind = "None9";
    readonly discriminator = 9;
    readonly kind = "None9";
    toJSON(): None9JSON;
    toEncodable(): {
        None9: {};
    };
}
export interface None10JSON {
    kind: "None10";
}
export declare class None10 {
    static readonly discriminator = 10;
    static readonly kind = "None10";
    readonly discriminator = 10;
    readonly kind = "None10";
    toJSON(): None10JSON;
    toEncodable(): {
        None10: {};
    };
}
export interface None11JSON {
    kind: "None11";
}
export declare class None11 {
    static readonly discriminator = 11;
    static readonly kind = "None11";
    readonly discriminator = 11;
    readonly kind = "None11";
    toJSON(): None11JSON;
    toEncodable(): {
        None11: {};
    };
}
export interface None12JSON {
    kind: "None12";
}
export declare class None12 {
    static readonly discriminator = 12;
    static readonly kind = "None12";
    readonly discriminator = 12;
    readonly kind = "None12";
    toJSON(): None12JSON;
    toEncodable(): {
        None12: {};
    };
}
export interface None13JSON {
    kind: "None13";
}
export declare class None13 {
    static readonly discriminator = 13;
    static readonly kind = "None13";
    readonly discriminator = 13;
    readonly kind = "None13";
    toJSON(): None13JSON;
    toEncodable(): {
        None13: {};
    };
}
export interface None14JSON {
    kind: "None14";
}
export declare class None14 {
    static readonly discriminator = 14;
    static readonly kind = "None14";
    readonly discriminator = 14;
    readonly kind = "None14";
    toJSON(): None14JSON;
    toEncodable(): {
        None14: {};
    };
}
export interface None15JSON {
    kind: "None15";
}
export declare class None15 {
    static readonly discriminator = 15;
    static readonly kind = "None15";
    readonly discriminator = 15;
    readonly kind = "None15";
    toJSON(): None15JSON;
    toEncodable(): {
        None15: {};
    };
}
export interface InvalidPermissionsJSON {
    kind: "InvalidPermissions";
}
export declare class InvalidPermissions {
    static readonly discriminator = 16;
    static readonly kind = "InvalidPermissions";
    readonly discriminator = 16;
    readonly kind = "InvalidPermissions";
    toJSON(): InvalidPermissionsJSON;
    toEncodable(): {
        InvalidPermissions: {};
    };
}
export declare function fromDecoded(obj: any): types.FunctionStatusKind;
export declare function fromJSON(obj: types.FunctionStatusJSON): types.FunctionStatusKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=FunctionStatus.d.ts.map