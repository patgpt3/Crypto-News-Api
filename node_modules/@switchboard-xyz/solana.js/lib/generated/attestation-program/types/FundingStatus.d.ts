import type * as types from "../types/index.js";
import * as borsh from "@coral-xyz/borsh";
export interface InactiveJSON {
    kind: "Inactive";
}
export declare class Inactive {
    static readonly discriminator = 0;
    static readonly kind = "Inactive";
    readonly discriminator = 0;
    readonly kind = "Inactive";
    toJSON(): InactiveJSON;
    toEncodable(): {
        Inactive: {};
    };
}
export interface ActiveJSON {
    kind: "Active";
}
export declare class Active {
    static readonly discriminator = 1;
    static readonly kind = "Active";
    readonly discriminator = 1;
    readonly kind = "Active";
    toJSON(): ActiveJSON;
    toEncodable(): {
        Active: {};
    };
}
export declare function fromDecoded(obj: any): types.FundingStatusKind;
export declare function fromJSON(obj: types.FundingStatusJSON): types.FundingStatusKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=FundingStatus.d.ts.map