import type * as types from "./index.js";
import * as borsh from "@coral-xyz/borsh";
export interface NoneJSON {
    kind: "None";
}
export declare class None {
    static readonly discriminator = 0;
    static readonly kind = "None";
    readonly discriminator = 0;
    readonly kind = "None";
    toJSON(): NoneJSON;
    toEncodable(): {
        None: {};
    };
}
export interface VerificationPendingJSON {
    kind: "VerificationPending";
}
export declare class VerificationPending {
    static readonly discriminator = 1;
    static readonly kind = "VerificationPending";
    readonly discriminator = 1;
    readonly kind = "VerificationPending";
    toJSON(): VerificationPendingJSON;
    toEncodable(): {
        VerificationPending: {};
    };
}
export interface VerificationFailureJSON {
    kind: "VerificationFailure";
}
export declare class VerificationFailure {
    static readonly discriminator = 2;
    static readonly kind = "VerificationFailure";
    readonly discriminator = 2;
    readonly kind = "VerificationFailure";
    toJSON(): VerificationFailureJSON;
    toEncodable(): {
        VerificationFailure: {};
    };
}
export interface None3JSON {
    kind: "None3";
}
export declare class None3 {
    static readonly discriminator = 3;
    static readonly kind = "None3";
    readonly discriminator = 3;
    readonly kind = "None3";
    toJSON(): None3JSON;
    toEncodable(): {
        None3: {};
    };
}
export interface VerificationSuccessJSON {
    kind: "VerificationSuccess";
}
export declare class VerificationSuccess {
    static readonly discriminator = 4;
    static readonly kind = "VerificationSuccess";
    readonly discriminator = 4;
    readonly kind = "VerificationSuccess";
    toJSON(): VerificationSuccessJSON;
    toEncodable(): {
        VerificationSuccess: {};
    };
}
export interface None5JSON {
    kind: "None5";
}
export declare class None5 {
    static readonly discriminator = 5;
    static readonly kind = "None5";
    readonly discriminator = 5;
    readonly kind = "None5";
    toJSON(): None5JSON;
    toEncodable(): {
        None5: {};
    };
}
export interface None6JSON {
    kind: "None6";
}
export declare class None6 {
    static readonly discriminator = 6;
    static readonly kind = "None6";
    readonly discriminator = 6;
    readonly kind = "None6";
    toJSON(): None6JSON;
    toEncodable(): {
        None6: {};
    };
}
export interface None7JSON {
    kind: "None7";
}
export declare class None7 {
    static readonly discriminator = 7;
    static readonly kind = "None7";
    readonly discriminator = 7;
    readonly kind = "None7";
    toJSON(): None7JSON;
    toEncodable(): {
        None7: {};
    };
}
export interface VerificationOverrideJSON {
    kind: "VerificationOverride";
}
export declare class VerificationOverride {
    static readonly discriminator = 8;
    static readonly kind = "VerificationOverride";
    readonly discriminator = 8;
    readonly kind = "VerificationOverride";
    toJSON(): VerificationOverrideJSON;
    toEncodable(): {
        VerificationOverride: {};
    };
}
export declare function fromDecoded(obj: any): types.VerificationStatusKind;
export declare function fromJSON(obj: types.VerificationStatusJSON): types.VerificationStatusKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=VerificationStatus.d.ts.map