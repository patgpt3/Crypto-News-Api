import type * as types from "../types/index.js";
import * as borsh from "@coral-xyz/borsh";
export interface NoneJSON {
    kind: "None";
}
export declare class None {
    static readonly discriminator = 0;
    static readonly kind = "None";
    readonly discriminator = 0;
    readonly kind = "None";
    toJSON(): NoneJSON;
    toEncodable(): {
        None: {};
    };
}
export interface PermitNodeheartbeatJSON {
    kind: "PermitNodeheartbeat";
}
export declare class PermitNodeheartbeat {
    static readonly discriminator = 1;
    static readonly kind = "PermitNodeheartbeat";
    readonly discriminator = 1;
    readonly kind = "PermitNodeheartbeat";
    toJSON(): PermitNodeheartbeatJSON;
    toEncodable(): {
        PermitNodeheartbeat: {};
    };
}
export interface PermitQueueUsageJSON {
    kind: "PermitQueueUsage";
}
export declare class PermitQueueUsage {
    static readonly discriminator = 2;
    static readonly kind = "PermitQueueUsage";
    readonly discriminator = 2;
    readonly kind = "PermitQueueUsage";
    toJSON(): PermitQueueUsageJSON;
    toEncodable(): {
        PermitQueueUsage: {};
    };
}
export declare function fromDecoded(obj: any): types.SwitchboardAttestationPermissionKind;
export declare function fromJSON(obj: types.SwitchboardAttestationPermissionJSON): types.SwitchboardAttestationPermissionKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=SwitchboardAttestationPermission.d.ts.map