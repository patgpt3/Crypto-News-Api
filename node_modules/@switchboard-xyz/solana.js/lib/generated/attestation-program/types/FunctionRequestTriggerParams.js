import * as borsh from "@coral-xyz/borsh";
import { BN } from "@switchboard-xyz/common"; // eslint-disable-line @typescript-eslint/no-unused-vars
export class FunctionRequestTriggerParams {
    bounty;
    slotsUntilExpiration;
    validAfterSlot;
    constructor(fields) {
        this.bounty = fields.bounty;
        this.slotsUntilExpiration = fields.slotsUntilExpiration;
        this.validAfterSlot = fields.validAfterSlot;
    }
    static layout(property) {
        return borsh.struct([
            borsh.option(borsh.u64(), "bounty"),
            borsh.option(borsh.u64(), "slotsUntilExpiration"),
            borsh.option(borsh.u64(), "validAfterSlot"),
        ], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new FunctionRequestTriggerParams({
            bounty: obj.bounty,
            slotsUntilExpiration: obj.slotsUntilExpiration,
            validAfterSlot: obj.validAfterSlot,
        });
    }
    static toEncodable(fields) {
        return {
            bounty: fields.bounty,
            slotsUntilExpiration: fields.slotsUntilExpiration,
            validAfterSlot: fields.validAfterSlot,
        };
    }
    toJSON() {
        return {
            bounty: (this.bounty && this.bounty.toString()) || null,
            slotsUntilExpiration: (this.slotsUntilExpiration && this.slotsUntilExpiration.toString()) ||
                null,
            validAfterSlot: (this.validAfterSlot && this.validAfterSlot.toString()) || null,
        };
    }
    static fromJSON(obj) {
        return new FunctionRequestTriggerParams({
            bounty: (obj.bounty && new BN(obj.bounty)) || null,
            slotsUntilExpiration: (obj.slotsUntilExpiration && new BN(obj.slotsUntilExpiration)) || null,
            validAfterSlot: (obj.validAfterSlot && new BN(obj.validAfterSlot)) || null,
        });
    }
    toEncodable() {
        return FunctionRequestTriggerParams.toEncodable(this);
    }
}
