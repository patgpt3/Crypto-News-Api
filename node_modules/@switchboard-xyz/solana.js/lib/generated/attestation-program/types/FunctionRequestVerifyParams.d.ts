import * as types from "../types/index.js";
import { BN } from "@switchboard-xyz/common";
export interface FunctionRequestVerifyParamsFields {
    observedTime: BN;
    errorCode: number;
    mrEnclave: Array<number>;
    requestSlot: BN;
    containerParamsHash: Array<number>;
}
export interface FunctionRequestVerifyParamsJSON {
    observedTime: string;
    errorCode: number;
    mrEnclave: Array<number>;
    requestSlot: string;
    containerParamsHash: Array<number>;
}
export declare class FunctionRequestVerifyParams {
    readonly observedTime: BN;
    readonly errorCode: number;
    readonly mrEnclave: Array<number>;
    readonly requestSlot: BN;
    readonly containerParamsHash: Array<number>;
    constructor(fields: FunctionRequestVerifyParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.FunctionRequestVerifyParams;
    static toEncodable(fields: FunctionRequestVerifyParamsFields): {
        observedTime: BN;
        errorCode: number;
        mrEnclave: number[];
        requestSlot: BN;
        containerParamsHash: number[];
    };
    toJSON(): FunctionRequestVerifyParamsJSON;
    static fromJSON(obj: FunctionRequestVerifyParamsJSON): FunctionRequestVerifyParams;
    toEncodable(): {
        observedTime: BN;
        errorCode: number;
        mrEnclave: number[];
        requestSlot: BN;
        containerParamsHash: number[];
    };
}
//# sourceMappingURL=FunctionRequestVerifyParams.d.ts.map