import * as borsh from "@coral-xyz/borsh";
export class Inactive {
    static discriminator = 0;
    static kind = "Inactive";
    discriminator = 0;
    kind = "Inactive";
    toJSON() {
        return {
            kind: "Inactive",
        };
    }
    toEncodable() {
        return {
            Inactive: {},
        };
    }
}
export class Active {
    static discriminator = 1;
    static kind = "Active";
    discriminator = 1;
    kind = "Active";
    toJSON() {
        return {
            kind: "Active",
        };
    }
    toEncodable() {
        return {
            Active: {},
        };
    }
}
// eslint-disable-next-line @typescript-eslint/no-explicit-any
export function fromDecoded(obj) {
    if (typeof obj !== "object") {
        throw new Error("Invalid enum object");
    }
    if ("Inactive" in obj) {
        return new Inactive();
    }
    if ("Active" in obj) {
        return new Active();
    }
    throw new Error("Invalid enum object");
}
export function fromJSON(obj) {
    switch (obj.kind) {
        case "Inactive": {
            return new Inactive();
        }
        case "Active": {
            return new Active();
        }
    }
}
export function layout(property) {
    const ret = borsh.rustEnum([
        borsh.struct([], "Inactive"),
        borsh.struct([], "Active"),
    ]);
    if (property !== undefined) {
        return ret.replicate(property);
    }
    return ret;
}
