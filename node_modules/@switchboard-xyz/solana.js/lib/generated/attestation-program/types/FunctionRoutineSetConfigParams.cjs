"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionRoutineSetConfigParams = void 0;
const borsh = __importStar(require("@coral-xyz/borsh"));
const common_1 = require("@switchboard-xyz/common"); // eslint-disable-line @typescript-eslint/no-unused-vars
class FunctionRoutineSetConfigParams {
    name;
    metadata;
    bounty;
    schedule;
    containerParams;
    appendContainerParams;
    constructor(fields) {
        this.name = fields.name;
        this.metadata = fields.metadata;
        this.bounty = fields.bounty;
        this.schedule = fields.schedule;
        this.containerParams = fields.containerParams;
        this.appendContainerParams = fields.appendContainerParams;
    }
    static layout(property) {
        return borsh.struct([
            borsh.option(borsh.vecU8(), "name"),
            borsh.option(borsh.vecU8(), "metadata"),
            borsh.option(borsh.u64(), "bounty"),
            borsh.option(borsh.vecU8(), "schedule"),
            borsh.option(borsh.vecU8(), "containerParams"),
            borsh.bool("appendContainerParams"),
        ], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new FunctionRoutineSetConfigParams({
            name: (obj.name &&
                new Uint8Array(obj.name.buffer, obj.name.byteOffset, obj.name.length)) ||
                null,
            metadata: (obj.metadata &&
                new Uint8Array(obj.metadata.buffer, obj.metadata.byteOffset, obj.metadata.length)) ||
                null,
            bounty: obj.bounty,
            schedule: (obj.schedule &&
                new Uint8Array(obj.schedule.buffer, obj.schedule.byteOffset, obj.schedule.length)) ||
                null,
            containerParams: (obj.containerParams &&
                new Uint8Array(obj.containerParams.buffer, obj.containerParams.byteOffset, obj.containerParams.length)) ||
                null,
            appendContainerParams: obj.appendContainerParams,
        });
    }
    static toEncodable(fields) {
        return {
            name: (fields.name &&
                Buffer.from(fields.name.buffer, fields.name.byteOffset, fields.name.length)) ||
                null,
            metadata: (fields.metadata &&
                Buffer.from(fields.metadata.buffer, fields.metadata.byteOffset, fields.metadata.length)) ||
                null,
            bounty: fields.bounty,
            schedule: (fields.schedule &&
                Buffer.from(fields.schedule.buffer, fields.schedule.byteOffset, fields.schedule.length)) ||
                null,
            containerParams: (fields.containerParams &&
                Buffer.from(fields.containerParams.buffer, fields.containerParams.byteOffset, fields.containerParams.length)) ||
                null,
            appendContainerParams: fields.appendContainerParams,
        };
    }
    toJSON() {
        return {
            name: (this.name && Array.from(this.name.values())) || null,
            metadata: (this.metadata && Array.from(this.metadata.values())) || null,
            bounty: (this.bounty && this.bounty.toString()) || null,
            schedule: (this.schedule && Array.from(this.schedule.values())) || null,
            containerParams: (this.containerParams && Array.from(this.containerParams.values())) ||
                null,
            appendContainerParams: this.appendContainerParams,
        };
    }
    static fromJSON(obj) {
        return new FunctionRoutineSetConfigParams({
            name: (obj.name && Uint8Array.from(obj.name)) || null,
            metadata: (obj.metadata && Uint8Array.from(obj.metadata)) || null,
            bounty: (obj.bounty && new common_1.BN(obj.bounty)) || null,
            schedule: (obj.schedule && Uint8Array.from(obj.schedule)) || null,
            containerParams: (obj.containerParams && Uint8Array.from(obj.containerParams)) || null,
            appendContainerParams: obj.appendContainerParams,
        });
    }
    toEncodable() {
        return FunctionRoutineSetConfigParams.toEncodable(this);
    }
}
exports.FunctionRoutineSetConfigParams = FunctionRoutineSetConfigParams;
