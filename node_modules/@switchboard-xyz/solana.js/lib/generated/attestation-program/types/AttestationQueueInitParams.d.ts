import * as types from "../types/index.js";
export interface AttestationQueueInitParamsFields {
    allowAuthorityOverrideAfter: number;
    requireAuthorityHeartbeatPermission: boolean;
    requireUsagePermissions: boolean;
    maxQuoteVerificationAge: number;
    reward: number;
    nodeTimeout: number;
}
export interface AttestationQueueInitParamsJSON {
    allowAuthorityOverrideAfter: number;
    requireAuthorityHeartbeatPermission: boolean;
    requireUsagePermissions: boolean;
    maxQuoteVerificationAge: number;
    reward: number;
    nodeTimeout: number;
}
export declare class AttestationQueueInitParams {
    readonly allowAuthorityOverrideAfter: number;
    readonly requireAuthorityHeartbeatPermission: boolean;
    readonly requireUsagePermissions: boolean;
    readonly maxQuoteVerificationAge: number;
    readonly reward: number;
    readonly nodeTimeout: number;
    constructor(fields: AttestationQueueInitParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.AttestationQueueInitParams;
    static toEncodable(fields: AttestationQueueInitParamsFields): {
        allowAuthorityOverrideAfter: number;
        requireAuthorityHeartbeatPermission: boolean;
        requireUsagePermissions: boolean;
        maxQuoteVerificationAge: number;
        reward: number;
        nodeTimeout: number;
    };
    toJSON(): AttestationQueueInitParamsJSON;
    static fromJSON(obj: AttestationQueueInitParamsJSON): AttestationQueueInitParams;
    toEncodable(): {
        allowAuthorityOverrideAfter: number;
        requireAuthorityHeartbeatPermission: boolean;
        requireUsagePermissions: boolean;
        maxQuoteVerificationAge: number;
        reward: number;
        nodeTimeout: number;
    };
}
//# sourceMappingURL=AttestationQueueInitParams.d.ts.map