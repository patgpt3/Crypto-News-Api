import type * as types from "../types/index.js";
import * as borsh from "@coral-xyz/borsh";
export interface UnitedStatesJSON {
    kind: "UnitedStates";
}
export declare class UnitedStates {
    static readonly discriminator = 0;
    static readonly kind = "UnitedStates";
    readonly discriminator = 0;
    readonly kind = "UnitedStates";
    toJSON(): UnitedStatesJSON;
    toEncodable(): {
        UnitedStates: {};
    };
}
export interface CanadaJSON {
    kind: "Canada";
}
export declare class Canada {
    static readonly discriminator = 1;
    static readonly kind = "Canada";
    readonly discriminator = 1;
    readonly kind = "Canada";
    toJSON(): CanadaJSON;
    toEncodable(): {
        Canada: {};
    };
}
export interface UnitedKingdomJSON {
    kind: "UnitedKingdom";
}
export declare class UnitedKingdom {
    static readonly discriminator = 2;
    static readonly kind = "UnitedKingdom";
    readonly discriminator = 2;
    readonly kind = "UnitedKingdom";
    toJSON(): UnitedKingdomJSON;
    toEncodable(): {
        UnitedKingdom: {};
    };
}
export interface EuropeJSON {
    kind: "Europe";
}
export declare class Europe {
    static readonly discriminator = 3;
    static readonly kind = "Europe";
    readonly discriminator = 3;
    readonly kind = "Europe";
    toJSON(): EuropeJSON;
    toEncodable(): {
        Europe: {};
    };
}
export interface MiddleEastJSON {
    kind: "MiddleEast";
}
export declare class MiddleEast {
    static readonly discriminator = 4;
    static readonly kind = "MiddleEast";
    readonly discriminator = 4;
    readonly kind = "MiddleEast";
    toJSON(): MiddleEastJSON;
    toEncodable(): {
        MiddleEast: {};
    };
}
export interface AsiaJSON {
    kind: "Asia";
}
export declare class Asia {
    static readonly discriminator = 5;
    static readonly kind = "Asia";
    readonly discriminator = 5;
    readonly kind = "Asia";
    toJSON(): AsiaJSON;
    toEncodable(): {
        Asia: {};
    };
}
export interface RussiaJSON {
    kind: "Russia";
}
export declare class Russia {
    static readonly discriminator = 6;
    static readonly kind = "Russia";
    readonly discriminator = 6;
    readonly kind = "Russia";
    toJSON(): RussiaJSON;
    toEncodable(): {
        Russia: {};
    };
}
export interface SouthAmericaJSON {
    kind: "SouthAmerica";
}
export declare class SouthAmerica {
    static readonly discriminator = 7;
    static readonly kind = "SouthAmerica";
    readonly discriminator = 7;
    readonly kind = "SouthAmerica";
    toJSON(): SouthAmericaJSON;
    toEncodable(): {
        SouthAmerica: {};
    };
}
export interface LatinAmericaJSON {
    kind: "LatinAmerica";
}
export declare class LatinAmerica {
    static readonly discriminator = 8;
    static readonly kind = "LatinAmerica";
    readonly discriminator = 8;
    readonly kind = "LatinAmerica";
    toJSON(): LatinAmericaJSON;
    toEncodable(): {
        LatinAmerica: {};
    };
}
export declare function fromDecoded(obj: any): types.ServerRegionKind;
export declare function fromJSON(obj: types.ServerRegionJSON): types.ServerRegionKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=ServerRegion.d.ts.map