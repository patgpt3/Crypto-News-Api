import * as borsh from "@coral-xyz/borsh";
import { BN } from "@switchboard-xyz/common"; // eslint-disable-line @typescript-eslint/no-unused-vars
export class FunctionRoutineVerifyParams {
    observedTime;
    nextAllowedTimestamp;
    errorCode;
    mrEnclave;
    containerParamsHash;
    constructor(fields) {
        this.observedTime = fields.observedTime;
        this.nextAllowedTimestamp = fields.nextAllowedTimestamp;
        this.errorCode = fields.errorCode;
        this.mrEnclave = fields.mrEnclave;
        this.containerParamsHash = fields.containerParamsHash;
    }
    static layout(property) {
        return borsh.struct([
            borsh.i64("observedTime"),
            borsh.i64("nextAllowedTimestamp"),
            borsh.u8("errorCode"),
            borsh.array(borsh.u8(), 32, "mrEnclave"),
            borsh.array(borsh.u8(), 32, "containerParamsHash"),
        ], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new FunctionRoutineVerifyParams({
            observedTime: obj.observedTime,
            nextAllowedTimestamp: obj.nextAllowedTimestamp,
            errorCode: obj.errorCode,
            mrEnclave: obj.mrEnclave,
            containerParamsHash: obj.containerParamsHash,
        });
    }
    static toEncodable(fields) {
        return {
            observedTime: fields.observedTime,
            nextAllowedTimestamp: fields.nextAllowedTimestamp,
            errorCode: fields.errorCode,
            mrEnclave: fields.mrEnclave,
            containerParamsHash: fields.containerParamsHash,
        };
    }
    toJSON() {
        return {
            observedTime: this.observedTime.toString(),
            nextAllowedTimestamp: this.nextAllowedTimestamp.toString(),
            errorCode: this.errorCode,
            mrEnclave: this.mrEnclave,
            containerParamsHash: this.containerParamsHash,
        };
    }
    static fromJSON(obj) {
        return new FunctionRoutineVerifyParams({
            observedTime: new BN(obj.observedTime),
            nextAllowedTimestamp: new BN(obj.nextAllowedTimestamp),
            errorCode: obj.errorCode,
            mrEnclave: obj.mrEnclave,
            containerParamsHash: obj.containerParamsHash,
        });
    }
    toEncodable() {
        return FunctionRoutineVerifyParams.toEncodable(this);
    }
}
