import * as types from "../types/index.js";
import { BN } from "@switchboard-xyz/common";
export interface ServiceWorkerInitParamsFields {
    region: types.ServerRegionKind;
    zone: types.ServerZoneKind;
    permissionsRequired: boolean;
    availableEnclaveSize: BN;
    maxEnclaveSize: BN;
    maxCpu: BN;
    enclaveCost: BN;
    maxServicesLen: number;
}
export interface ServiceWorkerInitParamsJSON {
    region: types.ServerRegionJSON;
    zone: types.ServerZoneJSON;
    permissionsRequired: boolean;
    availableEnclaveSize: string;
    maxEnclaveSize: string;
    maxCpu: string;
    enclaveCost: string;
    maxServicesLen: number;
}
export declare class ServiceWorkerInitParams {
    readonly region: types.ServerRegionKind;
    readonly zone: types.ServerZoneKind;
    readonly permissionsRequired: boolean;
    readonly availableEnclaveSize: BN;
    readonly maxEnclaveSize: BN;
    readonly maxCpu: BN;
    readonly enclaveCost: BN;
    readonly maxServicesLen: number;
    constructor(fields: ServiceWorkerInitParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.ServiceWorkerInitParams;
    static toEncodable(fields: ServiceWorkerInitParamsFields): {
        region: {
            UnitedStates: {};
        } | {
            Canada: {};
        } | {
            UnitedKingdom: {};
        } | {
            Europe: {};
        } | {
            MiddleEast: {};
        } | {
            Asia: {};
        } | {
            Russia: {};
        } | {
            SouthAmerica: {};
        } | {
            LatinAmerica: {};
        };
        zone: {
            North: {};
        } | {
            NorthEast: {};
        } | {
            East: {};
        } | {
            SouthEast: {};
        } | {
            South: {};
        } | {
            SouthWest: {};
        } | {
            West: {};
        } | {
            NorthWest: {};
        };
        permissionsRequired: boolean;
        availableEnclaveSize: BN;
        maxEnclaveSize: BN;
        maxCpu: BN;
        enclaveCost: BN;
        maxServicesLen: number;
    };
    toJSON(): ServiceWorkerInitParamsJSON;
    static fromJSON(obj: ServiceWorkerInitParamsJSON): ServiceWorkerInitParams;
    toEncodable(): {
        region: {
            UnitedStates: {};
        } | {
            Canada: {};
        } | {
            UnitedKingdom: {};
        } | {
            Europe: {};
        } | {
            MiddleEast: {};
        } | {
            Asia: {};
        } | {
            Russia: {};
        } | {
            SouthAmerica: {};
        } | {
            LatinAmerica: {};
        };
        zone: {
            North: {};
        } | {
            NorthEast: {};
        } | {
            East: {};
        } | {
            SouthEast: {};
        } | {
            South: {};
        } | {
            SouthWest: {};
        } | {
            West: {};
        } | {
            NorthWest: {};
        };
        permissionsRequired: boolean;
        availableEnclaveSize: BN;
        maxEnclaveSize: BN;
        maxCpu: BN;
        enclaveCost: BN;
        maxServicesLen: number;
    };
}
//# sourceMappingURL=ServiceWorkerInitParams.d.ts.map