import * as types from "../types/index.js";
export interface AttestationQueueAddMrEnclaveParamsFields {
    mrEnclave: Array<number>;
}
export interface AttestationQueueAddMrEnclaveParamsJSON {
    mrEnclave: Array<number>;
}
export declare class AttestationQueueAddMrEnclaveParams {
    readonly mrEnclave: Array<number>;
    constructor(fields: AttestationQueueAddMrEnclaveParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.AttestationQueueAddMrEnclaveParams;
    static toEncodable(fields: AttestationQueueAddMrEnclaveParamsFields): {
        mrEnclave: number[];
    };
    toJSON(): AttestationQueueAddMrEnclaveParamsJSON;
    static fromJSON(obj: AttestationQueueAddMrEnclaveParamsJSON): AttestationQueueAddMrEnclaveParams;
    toEncodable(): {
        mrEnclave: number[];
    };
}
//# sourceMappingURL=AttestationQueueAddMrEnclaveParams.d.ts.map