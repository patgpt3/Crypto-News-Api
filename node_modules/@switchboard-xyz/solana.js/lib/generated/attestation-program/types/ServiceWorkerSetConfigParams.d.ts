import * as types from "../types/index.js";
import { BN } from "@switchboard-xyz/common";
export interface ServiceWorkerSetConfigParamsFields {
    region: types.ServerRegionKind | null;
    zone: types.ServerZoneKind | null;
    permissionsRequired: boolean | null;
    lockPermissionsRequired: boolean | null;
    availableEnclaveSize: BN | null;
    maxEnclaveSize: BN | null;
    maxCpu: BN | null;
    enclaveCost: BN | null;
}
export interface ServiceWorkerSetConfigParamsJSON {
    region: types.ServerRegionJSON | null;
    zone: types.ServerZoneJSON | null;
    permissionsRequired: boolean | null;
    lockPermissionsRequired: boolean | null;
    availableEnclaveSize: string | null;
    maxEnclaveSize: string | null;
    maxCpu: string | null;
    enclaveCost: string | null;
}
export declare class ServiceWorkerSetConfigParams {
    readonly region: types.ServerRegionKind | null;
    readonly zone: types.ServerZoneKind | null;
    readonly permissionsRequired: boolean | null;
    readonly lockPermissionsRequired: boolean | null;
    readonly availableEnclaveSize: BN | null;
    readonly maxEnclaveSize: BN | null;
    readonly maxCpu: BN | null;
    readonly enclaveCost: BN | null;
    constructor(fields: ServiceWorkerSetConfigParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.ServiceWorkerSetConfigParams;
    static toEncodable(fields: ServiceWorkerSetConfigParamsFields): {
        region: {
            UnitedStates: {};
        } | {
            Canada: {};
        } | {
            UnitedKingdom: {};
        } | {
            Europe: {};
        } | {
            MiddleEast: {};
        } | {
            Asia: {};
        } | {
            Russia: {};
        } | {
            SouthAmerica: {};
        } | {
            LatinAmerica: {};
        } | null;
        zone: {
            North: {};
        } | {
            NorthEast: {};
        } | {
            East: {};
        } | {
            SouthEast: {};
        } | {
            South: {};
        } | {
            SouthWest: {};
        } | {
            West: {};
        } | {
            NorthWest: {};
        } | null;
        permissionsRequired: boolean | null;
        lockPermissionsRequired: boolean | null;
        availableEnclaveSize: BN | null;
        maxEnclaveSize: BN | null;
        maxCpu: BN | null;
        enclaveCost: BN | null;
    };
    toJSON(): ServiceWorkerSetConfigParamsJSON;
    static fromJSON(obj: ServiceWorkerSetConfigParamsJSON): ServiceWorkerSetConfigParams;
    toEncodable(): {
        region: {
            UnitedStates: {};
        } | {
            Canada: {};
        } | {
            UnitedKingdom: {};
        } | {
            Europe: {};
        } | {
            MiddleEast: {};
        } | {
            Asia: {};
        } | {
            Russia: {};
        } | {
            SouthAmerica: {};
        } | {
            LatinAmerica: {};
        } | null;
        zone: {
            North: {};
        } | {
            NorthEast: {};
        } | {
            East: {};
        } | {
            SouthEast: {};
        } | {
            South: {};
        } | {
            SouthWest: {};
        } | {
            West: {};
        } | {
            NorthWest: {};
        } | null;
        permissionsRequired: boolean | null;
        lockPermissionsRequired: boolean | null;
        availableEnclaveSize: BN | null;
        maxEnclaveSize: BN | null;
        maxCpu: BN | null;
        enclaveCost: BN | null;
    };
}
//# sourceMappingURL=ServiceWorkerSetConfigParams.d.ts.map