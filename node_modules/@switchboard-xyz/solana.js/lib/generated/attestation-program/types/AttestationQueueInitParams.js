import * as borsh from "@coral-xyz/borsh";
export class AttestationQueueInitParams {
    allowAuthorityOverrideAfter;
    requireAuthorityHeartbeatPermission;
    requireUsagePermissions;
    maxQuoteVerificationAge;
    reward;
    nodeTimeout;
    constructor(fields) {
        this.allowAuthorityOverrideAfter = fields.allowAuthorityOverrideAfter;
        this.requireAuthorityHeartbeatPermission =
            fields.requireAuthorityHeartbeatPermission;
        this.requireUsagePermissions = fields.requireUsagePermissions;
        this.maxQuoteVerificationAge = fields.maxQuoteVerificationAge;
        this.reward = fields.reward;
        this.nodeTimeout = fields.nodeTimeout;
    }
    static layout(property) {
        return borsh.struct([
            borsh.u32("allowAuthorityOverrideAfter"),
            borsh.bool("requireAuthorityHeartbeatPermission"),
            borsh.bool("requireUsagePermissions"),
            borsh.u32("maxQuoteVerificationAge"),
            borsh.u32("reward"),
            borsh.u32("nodeTimeout"),
        ], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new AttestationQueueInitParams({
            allowAuthorityOverrideAfter: obj.allowAuthorityOverrideAfter,
            requireAuthorityHeartbeatPermission: obj.requireAuthorityHeartbeatPermission,
            requireUsagePermissions: obj.requireUsagePermissions,
            maxQuoteVerificationAge: obj.maxQuoteVerificationAge,
            reward: obj.reward,
            nodeTimeout: obj.nodeTimeout,
        });
    }
    static toEncodable(fields) {
        return {
            allowAuthorityOverrideAfter: fields.allowAuthorityOverrideAfter,
            requireAuthorityHeartbeatPermission: fields.requireAuthorityHeartbeatPermission,
            requireUsagePermissions: fields.requireUsagePermissions,
            maxQuoteVerificationAge: fields.maxQuoteVerificationAge,
            reward: fields.reward,
            nodeTimeout: fields.nodeTimeout,
        };
    }
    toJSON() {
        return {
            allowAuthorityOverrideAfter: this.allowAuthorityOverrideAfter,
            requireAuthorityHeartbeatPermission: this.requireAuthorityHeartbeatPermission,
            requireUsagePermissions: this.requireUsagePermissions,
            maxQuoteVerificationAge: this.maxQuoteVerificationAge,
            reward: this.reward,
            nodeTimeout: this.nodeTimeout,
        };
    }
    static fromJSON(obj) {
        return new AttestationQueueInitParams({
            allowAuthorityOverrideAfter: obj.allowAuthorityOverrideAfter,
            requireAuthorityHeartbeatPermission: obj.requireAuthorityHeartbeatPermission,
            requireUsagePermissions: obj.requireUsagePermissions,
            maxQuoteVerificationAge: obj.maxQuoteVerificationAge,
            reward: obj.reward,
            nodeTimeout: obj.nodeTimeout,
        });
    }
    toEncodable() {
        return AttestationQueueInitParams.toEncodable(this);
    }
}
