import * as borsh from "@coral-xyz/borsh";
import { BN } from "@switchboard-xyz/common"; // eslint-disable-line @typescript-eslint/no-unused-vars
export class FunctionServiceInitParams {
    name;
    metadata;
    enclaveSize;
    cpu;
    maxContainerParamsLen;
    containerParams;
    constructor(fields) {
        this.name = fields.name;
        this.metadata = fields.metadata;
        this.enclaveSize = fields.enclaveSize;
        this.cpu = fields.cpu;
        this.maxContainerParamsLen = fields.maxContainerParamsLen;
        this.containerParams = fields.containerParams;
    }
    static layout(property) {
        return borsh.struct([
            borsh.option(borsh.vecU8(), "name"),
            borsh.option(borsh.vecU8(), "metadata"),
            borsh.u64("enclaveSize"),
            borsh.u64("cpu"),
            borsh.option(borsh.u32(), "maxContainerParamsLen"),
            borsh.vecU8("containerParams"),
        ], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new FunctionServiceInitParams({
            name: (obj.name &&
                new Uint8Array(obj.name.buffer, obj.name.byteOffset, obj.name.length)) ||
                null,
            metadata: (obj.metadata &&
                new Uint8Array(obj.metadata.buffer, obj.metadata.byteOffset, obj.metadata.length)) ||
                null,
            enclaveSize: obj.enclaveSize,
            cpu: obj.cpu,
            maxContainerParamsLen: obj.maxContainerParamsLen,
            containerParams: new Uint8Array(obj.containerParams.buffer, obj.containerParams.byteOffset, obj.containerParams.length),
        });
    }
    static toEncodable(fields) {
        return {
            name: (fields.name &&
                Buffer.from(fields.name.buffer, fields.name.byteOffset, fields.name.length)) ||
                null,
            metadata: (fields.metadata &&
                Buffer.from(fields.metadata.buffer, fields.metadata.byteOffset, fields.metadata.length)) ||
                null,
            enclaveSize: fields.enclaveSize,
            cpu: fields.cpu,
            maxContainerParamsLen: fields.maxContainerParamsLen,
            containerParams: Buffer.from(fields.containerParams.buffer, fields.containerParams.byteOffset, fields.containerParams.length),
        };
    }
    toJSON() {
        return {
            name: (this.name && Array.from(this.name.values())) || null,
            metadata: (this.metadata && Array.from(this.metadata.values())) || null,
            enclaveSize: this.enclaveSize.toString(),
            cpu: this.cpu.toString(),
            maxContainerParamsLen: this.maxContainerParamsLen,
            containerParams: Array.from(this.containerParams.values()),
        };
    }
    static fromJSON(obj) {
        return new FunctionServiceInitParams({
            name: (obj.name && Uint8Array.from(obj.name)) || null,
            metadata: (obj.metadata && Uint8Array.from(obj.metadata)) || null,
            enclaveSize: new BN(obj.enclaveSize),
            cpu: new BN(obj.cpu),
            maxContainerParamsLen: obj.maxContainerParamsLen,
            containerParams: Uint8Array.from(obj.containerParams),
        });
    }
    toEncodable() {
        return FunctionServiceInitParams.toEncodable(this);
    }
}
