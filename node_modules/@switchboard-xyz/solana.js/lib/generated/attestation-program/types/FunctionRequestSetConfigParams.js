import * as borsh from "@coral-xyz/borsh";
export class FunctionRequestSetConfigParams {
    containerParams;
    appendContainerParams;
    constructor(fields) {
        this.containerParams = fields.containerParams;
        this.appendContainerParams = fields.appendContainerParams;
    }
    static layout(property) {
        return borsh.struct([borsh.vecU8("containerParams"), borsh.bool("appendContainerParams")], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new FunctionRequestSetConfigParams({
            containerParams: new Uint8Array(obj.containerParams.buffer, obj.containerParams.byteOffset, obj.containerParams.length),
            appendContainerParams: obj.appendContainerParams,
        });
    }
    static toEncodable(fields) {
        return {
            containerParams: Buffer.from(fields.containerParams.buffer, fields.containerParams.byteOffset, fields.containerParams.length),
            appendContainerParams: fields.appendContainerParams,
        };
    }
    toJSON() {
        return {
            containerParams: Array.from(this.containerParams.values()),
            appendContainerParams: this.appendContainerParams,
        };
    }
    static fromJSON(obj) {
        return new FunctionRequestSetConfigParams({
            containerParams: Uint8Array.from(obj.containerParams),
            appendContainerParams: obj.appendContainerParams,
        });
    }
    toEncodable() {
        return FunctionRequestSetConfigParams.toEncodable(this);
    }
}
