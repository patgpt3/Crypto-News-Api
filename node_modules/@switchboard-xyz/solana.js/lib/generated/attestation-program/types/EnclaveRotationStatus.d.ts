import type * as types from "../types/index.js";
import * as borsh from "@coral-xyz/borsh";
export interface NoneJSON {
    kind: "None";
}
export declare class None {
    static readonly discriminator = 0;
    static readonly kind = "None";
    readonly discriminator = 0;
    readonly kind = "None";
    toJSON(): NoneJSON;
    toEncodable(): {
        None: {};
    };
}
export interface InProgressJSON {
    kind: "InProgress";
}
export declare class InProgress {
    static readonly discriminator = 1;
    static readonly kind = "InProgress";
    readonly discriminator = 1;
    readonly kind = "InProgress";
    toJSON(): InProgressJSON;
    toEncodable(): {
        InProgress: {};
    };
}
export declare function fromDecoded(obj: any): types.EnclaveRotationStatusKind;
export declare function fromJSON(obj: types.EnclaveRotationStatusJSON): types.EnclaveRotationStatusKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=EnclaveRotationStatus.d.ts.map