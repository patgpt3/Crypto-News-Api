/// <reference types="node" resolution-mode="require"/>
import * as types from "../types/index.js";
import { BN } from "@switchboard-xyz/common";
export interface FunctionServiceSetConfigParamsFields {
    name: Uint8Array | null;
    metadata: Uint8Array | null;
    enclaveSize: BN | null;
    cpu: BN | null;
    containerParams: Uint8Array | null;
}
export interface FunctionServiceSetConfigParamsJSON {
    name: Array<number> | null;
    metadata: Array<number> | null;
    enclaveSize: string | null;
    cpu: string | null;
    containerParams: Array<number> | null;
}
export declare class FunctionServiceSetConfigParams {
    readonly name: Uint8Array | null;
    readonly metadata: Uint8Array | null;
    readonly enclaveSize: BN | null;
    readonly cpu: BN | null;
    readonly containerParams: Uint8Array | null;
    constructor(fields: FunctionServiceSetConfigParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.FunctionServiceSetConfigParams;
    static toEncodable(fields: FunctionServiceSetConfigParamsFields): {
        name: Buffer | null;
        metadata: Buffer | null;
        enclaveSize: BN | null;
        cpu: BN | null;
        containerParams: Buffer | null;
    };
    toJSON(): FunctionServiceSetConfigParamsJSON;
    static fromJSON(obj: FunctionServiceSetConfigParamsJSON): FunctionServiceSetConfigParams;
    toEncodable(): {
        name: Buffer | null;
        metadata: Buffer | null;
        enclaveSize: BN | null;
        cpu: BN | null;
        containerParams: Buffer | null;
    };
}
//# sourceMappingURL=FunctionServiceSetConfigParams.d.ts.map