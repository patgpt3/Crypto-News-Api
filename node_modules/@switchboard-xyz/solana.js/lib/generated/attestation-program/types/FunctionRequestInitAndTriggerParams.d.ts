/// <reference types="node" resolution-mode="require"/>
import * as types from "../types/index.js";
import { BN } from "@switchboard-xyz/common";
export interface FunctionRequestInitAndTriggerParamsFields {
    bounty: BN | null;
    slotsUntilExpiration: BN | null;
    maxContainerParamsLen: number | null;
    containerParams: Uint8Array | null;
    garbageCollectionSlot: BN | null;
    validAfterSlot: BN | null;
}
export interface FunctionRequestInitAndTriggerParamsJSON {
    bounty: string | null;
    slotsUntilExpiration: string | null;
    maxContainerParamsLen: number | null;
    containerParams: Array<number> | null;
    garbageCollectionSlot: string | null;
    validAfterSlot: string | null;
}
export declare class FunctionRequestInitAndTriggerParams {
    readonly bounty: BN | null;
    readonly slotsUntilExpiration: BN | null;
    readonly maxContainerParamsLen: number | null;
    readonly containerParams: Uint8Array | null;
    readonly garbageCollectionSlot: BN | null;
    readonly validAfterSlot: BN | null;
    constructor(fields: FunctionRequestInitAndTriggerParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.FunctionRequestInitAndTriggerParams;
    static toEncodable(fields: FunctionRequestInitAndTriggerParamsFields): {
        bounty: BN | null;
        slotsUntilExpiration: BN | null;
        maxContainerParamsLen: number | null;
        containerParams: Buffer | null;
        garbageCollectionSlot: BN | null;
        validAfterSlot: BN | null;
    };
    toJSON(): FunctionRequestInitAndTriggerParamsJSON;
    static fromJSON(obj: FunctionRequestInitAndTriggerParamsJSON): FunctionRequestInitAndTriggerParams;
    toEncodable(): {
        bounty: BN | null;
        slotsUntilExpiration: BN | null;
        maxContainerParamsLen: number | null;
        containerParams: Buffer | null;
        garbageCollectionSlot: BN | null;
        validAfterSlot: BN | null;
    };
}
//# sourceMappingURL=FunctionRequestInitAndTriggerParams.d.ts.map