import type * as types from "../types/index.js";
import * as borsh from "@coral-xyz/borsh";
export interface NoneJSON {
    kind: "None";
}
export declare class None {
    static readonly discriminator = 0;
    static readonly kind = "None";
    readonly discriminator = 0;
    readonly kind = "None";
    toJSON(): NoneJSON;
    toEncodable(): {
        None: {};
    };
}
export interface AuthorityJSON {
    kind: "Authority";
}
export declare class Authority {
    static readonly discriminator = 1;
    static readonly kind = "Authority";
    readonly discriminator = 1;
    readonly kind = "Authority";
    toJSON(): AuthorityJSON;
    toEncodable(): {
        Authority: {};
    };
}
export interface FunctionJSON {
    kind: "Function";
}
export declare class Function {
    static readonly discriminator = 2;
    static readonly kind = "Function";
    readonly discriminator = 2;
    readonly kind = "Function";
    toJSON(): FunctionJSON;
    toEncodable(): {
        Function: {};
    };
}
export interface QueueJSON {
    kind: "Queue";
}
export declare class Queue {
    static readonly discriminator = 3;
    static readonly kind = "Queue";
    readonly discriminator = 3;
    readonly kind = "Queue";
    toJSON(): QueueJSON;
    toEncodable(): {
        Queue: {};
    };
}
export declare function fromDecoded(obj: any): types.ResourceLevelKind;
export declare function fromJSON(obj: types.ResourceLevelJSON): types.ResourceLevelKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=ResourceLevel.d.ts.map