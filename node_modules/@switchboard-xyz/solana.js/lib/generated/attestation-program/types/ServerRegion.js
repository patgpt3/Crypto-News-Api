import * as borsh from "@coral-xyz/borsh";
export class UnitedStates {
    static discriminator = 0;
    static kind = "UnitedStates";
    discriminator = 0;
    kind = "UnitedStates";
    toJSON() {
        return {
            kind: "UnitedStates",
        };
    }
    toEncodable() {
        return {
            UnitedStates: {},
        };
    }
}
export class Canada {
    static discriminator = 1;
    static kind = "Canada";
    discriminator = 1;
    kind = "Canada";
    toJSON() {
        return {
            kind: "Canada",
        };
    }
    toEncodable() {
        return {
            Canada: {},
        };
    }
}
export class UnitedKingdom {
    static discriminator = 2;
    static kind = "UnitedKingdom";
    discriminator = 2;
    kind = "UnitedKingdom";
    toJSON() {
        return {
            kind: "UnitedKingdom",
        };
    }
    toEncodable() {
        return {
            UnitedKingdom: {},
        };
    }
}
export class Europe {
    static discriminator = 3;
    static kind = "Europe";
    discriminator = 3;
    kind = "Europe";
    toJSON() {
        return {
            kind: "Europe",
        };
    }
    toEncodable() {
        return {
            Europe: {},
        };
    }
}
export class MiddleEast {
    static discriminator = 4;
    static kind = "MiddleEast";
    discriminator = 4;
    kind = "MiddleEast";
    toJSON() {
        return {
            kind: "MiddleEast",
        };
    }
    toEncodable() {
        return {
            MiddleEast: {},
        };
    }
}
export class Asia {
    static discriminator = 5;
    static kind = "Asia";
    discriminator = 5;
    kind = "Asia";
    toJSON() {
        return {
            kind: "Asia",
        };
    }
    toEncodable() {
        return {
            Asia: {},
        };
    }
}
export class Russia {
    static discriminator = 6;
    static kind = "Russia";
    discriminator = 6;
    kind = "Russia";
    toJSON() {
        return {
            kind: "Russia",
        };
    }
    toEncodable() {
        return {
            Russia: {},
        };
    }
}
export class SouthAmerica {
    static discriminator = 7;
    static kind = "SouthAmerica";
    discriminator = 7;
    kind = "SouthAmerica";
    toJSON() {
        return {
            kind: "SouthAmerica",
        };
    }
    toEncodable() {
        return {
            SouthAmerica: {},
        };
    }
}
export class LatinAmerica {
    static discriminator = 8;
    static kind = "LatinAmerica";
    discriminator = 8;
    kind = "LatinAmerica";
    toJSON() {
        return {
            kind: "LatinAmerica",
        };
    }
    toEncodable() {
        return {
            LatinAmerica: {},
        };
    }
}
// eslint-disable-next-line @typescript-eslint/no-explicit-any
export function fromDecoded(obj) {
    if (typeof obj !== "object") {
        throw new Error("Invalid enum object");
    }
    if ("UnitedStates" in obj) {
        return new UnitedStates();
    }
    if ("Canada" in obj) {
        return new Canada();
    }
    if ("UnitedKingdom" in obj) {
        return new UnitedKingdom();
    }
    if ("Europe" in obj) {
        return new Europe();
    }
    if ("MiddleEast" in obj) {
        return new MiddleEast();
    }
    if ("Asia" in obj) {
        return new Asia();
    }
    if ("Russia" in obj) {
        return new Russia();
    }
    if ("SouthAmerica" in obj) {
        return new SouthAmerica();
    }
    if ("LatinAmerica" in obj) {
        return new LatinAmerica();
    }
    throw new Error("Invalid enum object");
}
export function fromJSON(obj) {
    switch (obj.kind) {
        case "UnitedStates": {
            return new UnitedStates();
        }
        case "Canada": {
            return new Canada();
        }
        case "UnitedKingdom": {
            return new UnitedKingdom();
        }
        case "Europe": {
            return new Europe();
        }
        case "MiddleEast": {
            return new MiddleEast();
        }
        case "Asia": {
            return new Asia();
        }
        case "Russia": {
            return new Russia();
        }
        case "SouthAmerica": {
            return new SouthAmerica();
        }
        case "LatinAmerica": {
            return new LatinAmerica();
        }
    }
}
export function layout(property) {
    const ret = borsh.rustEnum([
        borsh.struct([], "UnitedStates"),
        borsh.struct([], "Canada"),
        borsh.struct([], "UnitedKingdom"),
        borsh.struct([], "Europe"),
        borsh.struct([], "MiddleEast"),
        borsh.struct([], "Asia"),
        borsh.struct([], "Russia"),
        borsh.struct([], "SouthAmerica"),
        borsh.struct([], "LatinAmerica"),
    ]);
    if (property !== undefined) {
        return ret.replicate(property);
    }
    return ret;
}
