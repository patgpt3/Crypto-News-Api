"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionRequestVerifyParams = void 0;
const borsh = __importStar(require("@coral-xyz/borsh"));
const common_1 = require("@switchboard-xyz/common"); // eslint-disable-line @typescript-eslint/no-unused-vars
class FunctionRequestVerifyParams {
    observedTime;
    errorCode;
    mrEnclave;
    requestSlot;
    containerParamsHash;
    constructor(fields) {
        this.observedTime = fields.observedTime;
        this.errorCode = fields.errorCode;
        this.mrEnclave = fields.mrEnclave;
        this.requestSlot = fields.requestSlot;
        this.containerParamsHash = fields.containerParamsHash;
    }
    static layout(property) {
        return borsh.struct([
            borsh.i64("observedTime"),
            borsh.u8("errorCode"),
            borsh.array(borsh.u8(), 32, "mrEnclave"),
            borsh.u64("requestSlot"),
            borsh.array(borsh.u8(), 32, "containerParamsHash"),
        ], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new FunctionRequestVerifyParams({
            observedTime: obj.observedTime,
            errorCode: obj.errorCode,
            mrEnclave: obj.mrEnclave,
            requestSlot: obj.requestSlot,
            containerParamsHash: obj.containerParamsHash,
        });
    }
    static toEncodable(fields) {
        return {
            observedTime: fields.observedTime,
            errorCode: fields.errorCode,
            mrEnclave: fields.mrEnclave,
            requestSlot: fields.requestSlot,
            containerParamsHash: fields.containerParamsHash,
        };
    }
    toJSON() {
        return {
            observedTime: this.observedTime.toString(),
            errorCode: this.errorCode,
            mrEnclave: this.mrEnclave,
            requestSlot: this.requestSlot.toString(),
            containerParamsHash: this.containerParamsHash,
        };
    }
    static fromJSON(obj) {
        return new FunctionRequestVerifyParams({
            observedTime: new common_1.BN(obj.observedTime),
            errorCode: obj.errorCode,
            mrEnclave: obj.mrEnclave,
            requestSlot: new common_1.BN(obj.requestSlot),
            containerParamsHash: obj.containerParamsHash,
        });
    }
    toEncodable() {
        return FunctionRequestVerifyParams.toEncodable(this);
    }
}
exports.FunctionRequestVerifyParams = FunctionRequestVerifyParams;
