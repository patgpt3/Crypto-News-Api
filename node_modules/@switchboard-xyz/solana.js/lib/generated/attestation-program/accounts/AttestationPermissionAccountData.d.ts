/// <reference types="node" resolution-mode="require"/>
import type { SwitchboardProgram } from "../../../SwitchboardProgram.js";
import { PublicKey } from "@solana/web3.js";
import { BN } from "@switchboard-xyz/common";
export interface AttestationPermissionAccountDataFields {
    authority: PublicKey;
    permissions: number;
    granter: PublicKey;
    grantee: PublicKey;
    expiration: BN;
    bump: number;
    ebuf: Array<number>;
}
export interface AttestationPermissionAccountDataJSON {
    authority: string;
    permissions: number;
    granter: string;
    grantee: string;
    expiration: string;
    bump: number;
    ebuf: Array<number>;
}
export declare class AttestationPermissionAccountData {
    readonly authority: PublicKey;
    readonly permissions: number;
    readonly granter: PublicKey;
    readonly grantee: PublicKey;
    readonly expiration: BN;
    readonly bump: number;
    readonly ebuf: Array<number>;
    static readonly discriminator: Buffer;
    static readonly layout: any;
    constructor(fields: AttestationPermissionAccountDataFields);
    static fetch(program: SwitchboardProgram, address: PublicKey, programId?: PublicKey): Promise<AttestationPermissionAccountData | null>;
    static fetchMultiple(program: SwitchboardProgram, addresses: PublicKey[], programId?: PublicKey): Promise<Array<AttestationPermissionAccountData | null>>;
    static decode(data: Buffer): AttestationPermissionAccountData;
    toJSON(): AttestationPermissionAccountDataJSON;
    static fromJSON(obj: AttestationPermissionAccountDataJSON): AttestationPermissionAccountData;
}
//# sourceMappingURL=AttestationPermissionAccountData.d.ts.map