/// <reference types="node" resolution-mode="require"/>
import type { SwitchboardProgram } from "../../../SwitchboardProgram.js";
import * as types from "../types/index.js";
import type { PublicKey } from "@solana/web3.js";
export interface TaskSpecRecordFields {
    hash: types.HashFields;
}
export interface TaskSpecRecordJSON {
    hash: types.HashJSON;
}
export declare class TaskSpecRecord {
    readonly hash: types.Hash;
    static readonly discriminator: Buffer;
    static readonly layout: any;
    constructor(fields: TaskSpecRecordFields);
    static fetch(program: SwitchboardProgram, address: PublicKey, programId?: PublicKey): Promise<TaskSpecRecord | null>;
    static fetchMultiple(program: SwitchboardProgram, addresses: PublicKey[], programId?: PublicKey): Promise<Array<TaskSpecRecord | null>>;
    static decode(data: Buffer): TaskSpecRecord;
    toJSON(): TaskSpecRecordJSON;
    static fromJSON(obj: TaskSpecRecordJSON): TaskSpecRecord;
}
//# sourceMappingURL=TaskSpecRecord.d.ts.map