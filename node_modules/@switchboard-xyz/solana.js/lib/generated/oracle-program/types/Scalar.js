import * as borsh from "@coral-xyz/borsh";
/**
 * The `Scalar` struct holds an integer \\(s < 2\^{255} \\) which
 * represents an element of \\(\mathbb Z / \ell\\).
 */
export class Scalar {
    /**
     * `bytes` is a little-endian byte encoding of an integer representing a scalar modulo the
     * group order.
     *
     * # Invariant
     *
     * The integer representing this scalar must be bounded above by \\(2\^{255}\\), or
     * equivalently the high bit of `bytes[31]` must be zero.
     *
     * This ensures that there is room for a carry bit when computing a NAF representation.
     */
    bytes;
    constructor(fields) {
        this.bytes = fields.bytes;
    }
    static layout(property) {
        return borsh.struct([borsh.array(borsh.u8(), 32, "bytes")], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new Scalar({
            bytes: obj.bytes,
        });
    }
    static toEncodable(fields) {
        return {
            bytes: fields.bytes,
        };
    }
    toJSON() {
        return {
            bytes: this.bytes,
        };
    }
    static fromJSON(obj) {
        return new Scalar({
            bytes: obj.bytes,
        });
    }
    toEncodable() {
        return Scalar.toEncodable(this);
    }
}
