import * as types from "../types/index.js";
import { PublicKey } from "@solana/web3.js";
export interface ProgramConfigParamsFields {
    token: PublicKey;
    bump: number;
    daoMint: PublicKey;
    addEnclaves: Array<Array<number>>;
    rmEnclaves: Array<Array<number>>;
}
export interface ProgramConfigParamsJSON {
    token: string;
    bump: number;
    daoMint: string;
    addEnclaves: Array<Array<number>>;
    rmEnclaves: Array<Array<number>>;
}
export declare class ProgramConfigParams {
    readonly token: PublicKey;
    readonly bump: number;
    readonly daoMint: PublicKey;
    readonly addEnclaves: Array<Array<number>>;
    readonly rmEnclaves: Array<Array<number>>;
    constructor(fields: ProgramConfigParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.ProgramConfigParams;
    static toEncodable(fields: ProgramConfigParamsFields): {
        token: PublicKey;
        bump: number;
        daoMint: PublicKey;
        addEnclaves: number[][];
        rmEnclaves: number[][];
    };
    toJSON(): ProgramConfigParamsJSON;
    static fromJSON(obj: ProgramConfigParamsJSON): ProgramConfigParams;
    toEncodable(): {
        token: PublicKey;
        bump: number;
        daoMint: PublicKey;
        addEnclaves: number[][];
        rmEnclaves: number[][];
    };
}
//# sourceMappingURL=ProgramConfigParams.d.ts.map